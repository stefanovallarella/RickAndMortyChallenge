// Next
import Head from 'next/head'

// React
import { useEffect, useState } from 'react'

// Libs
import axios from 'axios'

// Components
import { CharCard } from '../components/CharCard'
import { CharGrid } from '../components/CharGrid'

// Types
import { ApiData, Character } from '../@types/Api'

// Styles
import * as S from '../styles/pages/home'
import { GlobalStyle } from '@/styles/globals'

interface Props {
  res: ApiData
}

interface CurrentInfo {
  count: number
  pages: number
  next: string | null
  prev: string | null
  current: string
}

interface Inputs {
  query: string
}

export const API_URL = 'https://rickandmortyapi.com/api/character'

export default function Home(props: Props) {
  const { info, results = [] } = props.res

  const [filteredBy, setFilteredBy] = useState<string>('')
  const [characters, setCharacters] = useState<Character[]>(results)
  const [currentInfo, setCurrentInfo] = useState<CurrentInfo>({
    ...info,
    current: API_URL,
  })

  // Constants
  const { current } = currentInfo
  const disablePrevButton = currentInfo.prev === null
  const disableNextButton = currentInfo.next === null
  const currentPageNumber = current.includes('page=')
    ? Number(new URL(current).searchParams.get('page'))
    : 1

  // Functions
  const handleNextPage = () => {
    setCurrentInfo((prevInfo: CurrentInfo) => {
      return { ...prevInfo, current: prevInfo.next ? prevInfo.next : current }
    })
  }

  const handlePrevPage = () => {
    setCurrentInfo((prevInfo: CurrentInfo) => {
      return { ...prevInfo, current: prevInfo.prev ? prevInfo.prev : current }
    })
  }


  useEffect(() => {
    if (current === API_URL) return

    async function changePage() {
      const changePage = await axios
        .get<ApiData>(current)
        .then(({ data }) => {
          return data
        })
        .catch(() => {
          console.log('Personagem n√£o encontrado!')
        })

      if (changePage) {
        setCurrentInfo({
          ...changePage.info,
          current,
        })

        setCharacters([...changePage.results])
      }
    }

    changePage()
  }, [current])

  return (
    <>
      <Head>
        <title>Rick and Morty</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
   
        <S.SplitScreenContainer>
          <CharGrid characters={ characters } />
          <CharGrid characters={ characters }  />
        </S.SplitScreenContainer>
        

        <S.PaginationContainer>
          <S.BackButton onClick={handlePrevPage} disabled={disablePrevButton}>
            Prev
          </S.BackButton>
          <S.PageCount
            type="text"
            disabled
            value={`${currentPageNumber} / ${currentInfo.pages}`}
          />
          <S.NextButton onClick={handleNextPage} disabled={disableNextButton}>
            Next
          </S.NextButton>
        </S.PaginationContainer>
        <GlobalStyle/>
      </main>
    </>
  )
}

export async function getStaticProps() {
  const res = await axios.get<ApiData>(API_URL).then(({ data }) => {
    return data
  })

  return {
    props: {
      res,
    },
    revalidate: 60 * 60 * 2, // 2 hours,
  }
}
