// Next
import Head from 'next/head'


// Components
import { CharCard } from '../components/CharCard'
import { CharGrid } from '../components/CharGrid'
import {EpisodesContainer} from '../components/EpisodesContainer'

// Types
import { ApiData, Character } from '../@types/Api'

// Styles
import * as S from '../styles/pages/home'
import { GlobalStyle } from '@/styles/globals'

interface Props {
  res: ApiData
}

interface CurrentInfo {
  count: number
  pages: number
  next: string | null
  prev: string | null
  current: string
}

interface Inputs {
  query: string
}


import { CharacterProvider } from '../contexts/CharacterContext'; 


export const API_URL = 'https://rickandmortyapi.com/api/character'

export default function Home() {
  // const { info, results = [] } = props.res

  // const [characters, setCharacters] = useState<Character[]>(results)
  // const [currentInfo, setCurrentInfo] = useState<CurrentInfo>({
  //   ...info,
  //   current: API_URL,
  // })

  // // Constants
  // const { current } = currentInfo
  // const disablePrevButton = currentInfo.prev === null
  // const disableNextButton = currentInfo.next === null
  // const currentPageNumber = current.includes('page=')
  //   ? Number(new URL(current).searchParams.get('page'))
  //   : 1

  // // Functions
  // const handleNextPage = () => {
  //   setCurrentInfo((prevInfo: CurrentInfo) => {
  //     return { ...prevInfo, current: prevInfo.next ? prevInfo.next : current }
  //   })
  // }

  // const handlePrevPage = () => {
  //   setCurrentInfo((prevInfo: CurrentInfo) => {
  //     return { ...prevInfo, current: prevInfo.prev ? prevInfo.prev : current }
  //   })
  // }


  // useEffect(() => {
  //   if (current === API_URL) return

  //   async function changePage() {
  //     const changePage = await axios
  //       .get<ApiData>(current)
  //       .then(({ data }) => {
  //         return data
  //       })
  //       .catch(() => {
  //         console.log('Personagem n√£o encontrado!')
  //       })

  //     if (changePage) {
  //       setCurrentInfo({
  //         ...changePage.info,
  //         current,
  //       })

  //       setCharacters([...changePage.results])
  //     }
  //   }

  //   changePage()
  // }, [current])

  return (
    <>
      <Head>
        <title>Rick and Morty</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <CharacterProvider>
          <S.SplitScreenContainer>
            <CharGrid characterOrder={1} />
            <CharGrid characterOrder={2} />
          </S.SplitScreenContainer>

        <EpisodesContainer/>
       

          <GlobalStyle/>
        </CharacterProvider>
      </main>
    </>
  )
}

// export async function getStaticProps() {
//   const res = await axios.get<ApiData>(API_URL).then(({ data }) => {
//     return data
//   })

//   return {
//     props: {
//       res,
//     },
//     revalidate: 60 * 60 * 2, // 2 hours,
//   }
// }
